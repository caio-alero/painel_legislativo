#            label.size = NA,
#            family = 'Bahnschrift',
#            size = 5)  +
# geom_curve(aes(x = 2020, y = 4100, xend = 2021, yend = 3800),
#            colour = "#555555",
#            size=0.5,
#            curvature = -0.2,
#            arrow = arrow(length = unit(0.03, "npc"))) +
geom_text(vjust = -0.2, family = 'Bahnschrift', size = 5) +
scale_fill_jama() +
labs(x = '', y = '', subtitle = 'Número de matérias apresentadas') +
coord_cartesian(ylim = c(0, 600)) +
theme_classic(base_size = 16) +
theme(
legend.text = element_blank(),
axis.line.x = element_line(colour = "#333333", size = 1),
panel.grid.major.y = element_line(colour = 'gray'),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(fill = 'white'),
axis.title.y = element_text(angle = 0, vjust = 1, hjust = 10),
title = element_text(size = 14),
text = element_text(size = 18, family = 'Bahnschrift')
)
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(mes_apresentacao) %>%
ggplot(aes(x = mes_apresentacao, y = n, label = n, fill = '')) +
geom_bar(stat = 'identity', width = 0.7) +
# geom_line(color = 'grey30', size = 1) +
# geom_point(color = 'grey30') +
# geom_label(aes(x = 2019, y = 4500, label = "Em 2021 houve\n um aumento de x%\n em relação a 2020"),
#            hjust = 0,
#            vjust = 0.5,
#            lineheight = 0.8,
#            colour = "#555555",
#            fill = "white",
#            label.size = NA,
#            family = 'Bahnschrift',
#            size = 5)  +
# geom_curve(aes(x = 2020, y = 4100, xend = 2021, yend = 3800),
#            colour = "#555555",
#            size=0.5,
#            curvature = -0.2,
#            arrow = arrow(length = unit(0.03, "npc"))) +
geom_text(vjust = -0.2, family = 'Bahnschrift', size = 5) +
scale_fill_jama() +
labs(x = '', y = '', subtitle = 'Número de matérias apresentadas') +
coord_cartesian(ylim = c(0, 600)) +
theme_classic(base_size = 16) +
theme(
legend.position = 'none',
axis.line.x = element_line(colour = "#333333", size = 1),
panel.grid.major.y = element_line(colour = 'gray'),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(fill = 'white'),
axis.title.y = element_text(angle = 0, vjust = 1, hjust = 10),
title = element_text(size = 14),
text = element_text(size = 18, family = 'Bahnschrift')
)
# materias por ano
ggsave('testjpeg.jpg', width = 10, height = 6)
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(mes_apresentacao) %>%
ggplot(aes(x = mes_apresentacao, y = n, label = n, fill = '')) +
geom_bar(stat = 'identity', width = 0.7) +
# geom_line(color = 'grey30', size = 1) +
# geom_point(color = 'grey30') +
# geom_label(aes(x = 2019, y = 4500, label = "Em 2021 houve\n um aumento de x%\n em relação a 2020"),
#            hjust = 0,
#            vjust = 0.5,
#            lineheight = 0.8,
#            colour = "#555555",
#            fill = "white",
#            label.size = NA,
#            family = 'Bahnschrift',
#            size = 5)  +
# geom_curve(aes(x = 2020, y = 4100, xend = 2021, yend = 3800),
#            colour = "#555555",
#            size=0.5,
#            curvature = -0.2,
#            arrow = arrow(length = unit(0.03, "npc"))) +
geom_text(vjust = -0.2, family = 'Bahnschrift', size = 5) +
scale_fill_jama() +
labs(x = '', y = '', subtitle = 'Número de matérias apresentadas') +
coord_cartesian(ylim = c(0, 600)) +
theme_classic(base_size = 16) +
theme(
legend.position = 'none',
axis.line.x = element_line(colour = "#333333", size = 1),
panel.grid.major.y = element_line(colour = 'gray'),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(fill = 'white'),
axis.title.y = element_text(angle = 0, vjust = 1, hjust = 10),
title = element_text(size = 14),
text = element_text(size = 18, family = 'Bahnschrift')
)
dev.off()
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(mes_apresentacao)
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(mes_apresentacao) %>% pull(n)
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(mes_apresentacao) %>% pull(n) %>% mean()
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(mes_apresentacao) %>%
ggplot(aes(x = mes_apresentacao, y = n, label = n, fill = '')) +
geom_bar(stat = 'identity', width = 0.7) +
# geom_line(color = 'grey30', size = 1) +
# geom_point(color = 'grey30') +
# geom_label(aes(x = 2019, y = 4500, label = "Em 2021 houve\n um aumento de x%\n em relação a 2020"),
#            hjust = 0,
#            vjust = 0.5,
#            lineheight = 0.8,
#            colour = "#555555",
#            fill = "white",
#            label.size = NA,
#            family = 'Bahnschrift',
#            size = 5)  +
# geom_curve(aes(x = 2020, y = 4100, xend = 2021, yend = 3800),
#            colour = "#555555",
#            size=0.5,
#            curvature = -0.2,
#            arrow = arrow(length = unit(0.03, "npc"))) +
geom_text(vjust = -0.2, family = 'Bahnschrift', size = 5) +
scale_fill_jama() +
labs(x = '', y = '', subtitle = 'Número de matérias apresentadas') +
coord_cartesian(ylim = c(0, 600)) +
theme_classic(base_size = 16) +
theme(
legend.position = 'none',
axis.line.x = element_line(colour = "#333333", size = 1),
panel.grid.major.y = element_line(colour = 'gray'),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(fill = 'white'),
axis.title.y = element_text(angle = 0, vjust = 1, hjust = 10),
title = element_text(size = 14),
text = element_text(size = 18, family = 'Bahnschrift')
)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library(Cairo)
library(ggplot2)
library(bbplot)
library(extrafont)
library(ggsci)
loadfonts(device = 'win')
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Retirada',
'NA' = 'NA')
sapl_data <- as_tibble(sapl_data)
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(mes_apresentacao) %>%
ggplot(aes(x = mes_apresentacao, y = n, label = n, fill = '')) +
geom_bar(stat = 'identity', width = 0.7) +
# geom_line(color = 'grey30', size = 1) +
# geom_point(color = 'grey30') +
# geom_label(aes(x = 2019, y = 4500, label = "Em 2021 houve\n um aumento de x%\n em relação a 2020"),
#            hjust = 0,
#            vjust = 0.5,
#            lineheight = 0.8,
#            colour = "#555555",
#            fill = "white",
#            label.size = NA,
#            family = 'Bahnschrift',
#            size = 5)  +
# geom_curve(aes(x = 2020, y = 4100, xend = 2021, yend = 3800),
#            colour = "#555555",
#            size=0.5,
#            curvature = -0.2,
#            arrow = arrow(length = unit(0.03, "npc"))) +
geom_text(vjust = -0.2, family = 'Bahnschrift', size = 5) +
scale_fill_jama() +
labs(x = '', y = '', subtitle = 'Número de matérias apresentadas') +
coord_cartesian(ylim = c(0, 600)) +
theme_classic(base_size = 16) +
theme(
legend.position = 'none',
axis.line.x = element_line(colour = "#333333", size = 1),
panel.grid.major.y = element_line(colour = 'gray'),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.background = element_rect(fill = 'white'),
axis.title.y = element_text(angle = 0, vjust = 1, hjust = 10),
title = element_text(size = 14),
text = element_text(size = 18, family = 'Bahnschrift')
)
sapl_data %>%
filter(ano_apresentacao == 2007) %>%
count(status)
sapl_data %>%
filter(ano_apresentacao == 2007) %>%
count(status, Grupo)
sapl_data %>%
filter(ano_apresentacao == 2007) %>%
count(status, resultado)
sapl_data %>%
filter(ano_apresentacao == 2007) %>%
count(resultado)
sapl_data %>%
filter(ano_apresentacao == 2007) %>%
count(status, resultado)
sapl_data %>%
filter(ano_apresentacao == 2007) %>%
count(status, Grupo)
sapl_data %>%
filter(ano_apresentacao == 2007,
!is.na(status))
sapl_data %>%
filter(ano_apresentacao == 2007,
!is.na(status)) %>% View()
agrupamento_status
agrupamento_status %>% View()
sapl_data %>%
filter(ano_apresentacao == 2007,
!is.na(status)) %>%
count(status)
sapl_data %>%
filter(ano_apresentacao == 2007,
!is.na(status)) %>%
count(status, Grupo)
sapl_data %>%
filter(ano_apresentacao == 20078,
!is.na(status)) %>%
count(status, Grupo)
sapl_data %>%
filter(ano_apresentacao == 2008,
!is.na(status)) %>%
count(status, Grupo)
library(dplyr)
library(Cairo)
library(ggplot2)
library(bbplot)
library(extrafont)
library(ggsci)
runApp()
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data <- as_tibble(sapl_data)
sapl_data %>%
filter(ano_apresentacao == 2009,
!is.na(status)) %>%
count(status, Grupo)
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data <- as_tibble(sapl_data)
sapl_data %>%
filter(ano_apresentacao == 2009,
!is.na(status)) %>%
count(status, Grupo)
sapl_data %>%
filter(ano_apresentacao == 2009,
!is.na(status)) %>% View()
sapl_data %>% count(localizacao_atual)
sapl_data %>% count(localizacao_atual) %>% View()
sapl_data %>% count(localizacao_atual) %>% View()
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data %>%
mutate(Grupo == ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo))
sapl_data %>%
mutate(Grupo == ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>%
as_tibble() -> sapl_data
sapl_data %>%
filter(ano_apresentacao == 2009,
!is.na(status)) %>%
count(status, Grupo)
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data %>%
mutate(Grupo == ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo))
sapl_data %>%
mutate(Grupo == ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>% View()
sapl_data %>%
mutate(Grupo == ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>% filter(ano_apresentacao == 2009, !is.na(Grupo))
sapl_data %>%
mutate(Grupo == ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>% filter(ano_apresentacao == 2009, !is.na(Grupo)) %>% view
sapl_data %>%
mutate(Grupo == ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>% filter(ano_apresentacao == 2009, !is.na(Grupo)) %>% View()
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data$Grupo
sapl_data$Grupo %>% as.character()
sapl_data %>%
mutate(Grupo == ifelse(str_detect(as.character(localizacao_atual), 'Arquivo'), 'Proposição Arquivada', Grupo)) %>%
as_tibble()
sapl_data %>%
mutate(Grupo = ifelse(str_detect(as.character(localizacao_atual), 'Arquivo'), 'Proposição Arquivada', Grupo)) %>%
as_tibble()
sapl_data %>%
mutate(Grupo = ifelse(str_detect(as.character(localizacao_atual), 'Arquivo'), 'Proposição Arquivada', Grupo)) %>%
as_tibble() -> sapl_data
sapl_data %>%
filter(ano_apresentacao == 2009,
!is.na(status)) %>%
count(status, Grupo)
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data %>%
mutate(Grupo = ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>%
as_tibble()
sapl_data %>%
mutate(Grupo = ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>%
as_tibble() %>% filter(ano_apresentacao == 2009) %>% count(Grupo)
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data$Grupo %>% table()
sapl_data %>%
mutate(Grupo = ifelse(str_detect(localizacao_atual, 'Arquivo'), 'Proposição Arquivada', Grupo)) %>%
as_tibble() %>% filter(ano_apresentacao == 2009)
sapl_data %>%
mutate(Grupo = ifelse(str_detect(localizacao_atual, 'Arquivo') & Grupo == 'Em tramitação', 'Proposição Arquivada', Grupo)) %>%
as_tibble() %>% filter(ano_apresentacao == 2009) %>% count(Grupo)
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA')
sapl_data %>%
mutate(Grupo = ifelse(str_detect(localizacao_atual, 'Arquivo') & Grupo == 'Em tramitação', 'Proposição Arquivada', Grupo)) %>%
as_tibble() %>% filter(ano_apresentacao == 2009) %>% count(Grupo)
sapl_data %>%
mutate(Grupo = ifelse(str_detect(localizacao_atual, 'Arquivo') & Grupo == 'Em tramitação', 'Proposição Arquivada', Grupo))
sapl_data %>%
mutate(Grupo2 = ifelse(str_detect(localizacao_atual, 'Arquivo') & Grupo == 'Em tramitação', 'Proposição Arquivada', Grupo)) %>%
as_tibble() %>% filter(ano_apresentacao == 2009) %>% count(Grupo, Grupo2)
# dados das materias ----
files <- list.files(path = 'data/', pattern = '.rds', full.names = TRUE)
sapl_data <- do.call("bind_rows", lapply(files, readRDS))
agrupamento_status <- read.table('agrupamento_status.txt', sep = '\t', header = TRUE) %>% as_tibble()
sapl_data <- merge(sapl_data, agrupamento_status, by = 'status')
sapl_data$Grupo <- as.character(recode_factor(as.factor(sapl_data$Grupo),
'1' = 'Proposição Aprovada',
'2' = 'Proposição Rejeitada',
'3' = 'Em tramitação',
'4' = 'Proposição Arquivada',
'NA' = 'NA'))
sapl_data$Grupo
sapl_data %>%
mutate(Grupo2 = ifelse(str_detect(localizacao_atual, 'Arquivo') & Grupo == 'Em tramitação', 'Proposição Arquivada', Grupo)) %>%
as_tibble() %>% filter(ano_apresentacao == 2009) %>% count(Grupo, Grupo2)
sapl_data %>%
mutate(Grupo = ifelse(str_detect(localizacao_atual, 'Arquivo') & Grupo == 'Em tramitação', 'Proposição Arquivada', Grupo)) -> sapl_data
sapl_data %>%
filter(ano_apresentacao == 2009,
!is.na(status)) %>%
count(status, Grupo)
sapl_data %>%
filter(ano_apresentacao == 2009,
!is.na(status)) %>%
count(Grupo)
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(Grupo)
87 + 7 +229+4+1+6+7
sapl_data %>%
filter(Grupo == 'Em tramitação') %>%
count(Grupo, ano_apresentacao)
sapl_data %>%
filter(Grupo == 'Em tramitação') %>% View()
sapl_data %>% count(resultado)
sapl_data %>%
filter(Grupo == 'Em tramitação') %>%
count(Grupo, ano_apresentacao)
sapl_data %>%
filter(Grupo == 'Em tramitação') %>%
View()
sapl_data %>%
filter(Grupo == 'Em tramitação') %>% select(num_projeto, ano_apresentacao) %>%
View()
sapl_data %>%
filter(Grupo == 'Em tramitação') %>% select(num_projeto, ano_apresentacao, localizacao_atual, status) %>%
View()
sapl_data %>%
filter(ano_apresentacao == 2007) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2008) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2009) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2009) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2010) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2011) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2012) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2013) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2014) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2015) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2016) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2017) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2018) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2019) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2020) %>%
count(projeto)
sapl_data %>%
filter(ano_apresentacao == 2021) %>%
count(projeto)
sapl_data %>%
count(ano_apresentacao)
